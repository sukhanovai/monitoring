#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª—É—á–µ–Ω–∏—è –ø–æ—á—Ç—ã –Ω–∞ root@help.geltd.local
"""

import subprocess
import sys
import os

sys.path.insert(0, '/opt/monitoring')

def test_email_delivery():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –¥–æ—Å—Ç–∞–≤–∫—É –ø–æ—á—Ç—ã –Ω–∞ root"""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç–∞–≤–∫–∏ –ø–æ—á—Ç—ã –Ω–∞ root@help.geltd.local\n")
    
    # –¢–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ –æ—Ç Proxmox
    test_email = """Subject: vzdump backup status (sr-pve4.geltd.local): backup successful
From: root@sr-pve4.localdomain
To: root@help.geltd.local
Date: Tue, 21 Oct 2025 18:35:53 +0700

Backup completed successfully
Duration: 02:15:30
Total size: 145.8GB
VMs: 12 successful, 0 failed
"""
    
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∏—Å—å–º–æ —á–µ—Ä–µ–∑ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
        result = subprocess.run(
            ['/opt/monitoring/email_processor.py'],
            input=test_email,
            text=True,
            capture_output=True
        )
        
        if result.returncode == 0:
            print("‚úÖ –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–ª —Ç–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏
            if os.path.exists('/opt/monitoring/logs/email_processor.log'):
                with open('/opt/monitoring/logs/email_processor.log', 'r') as f:
                    logs = f.read()
                    if 'sr-pve4' in logs:
                        print("‚úÖ –ü–∏—Å—å–º–æ –æ—Ç sr-pve4 –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ –≤ –ª–æ–≥–∞—Ö")
                    else:
                        print("‚ùå –ü–∏—Å—å–º–æ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –ª–æ–≥–∞—Ö")
        else:
            print(f"‚ùå –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–≤–µ—Ä—à–∏–ª—Å—è —Å –æ—à–∏–±–∫–æ–π: {result.returncode}")
            print(f"STDERR: {result.stderr}")
            
        return result.returncode == 0
        
    except Exception as e:
        print(f"üí• –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return False

def check_mail_system():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ø–æ—á—Ç–æ–≤—É—é —Å–∏—Å—Ç–µ–º—É"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –ø–æ—á—Ç–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã...")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Postfix
    try:
        result = subprocess.run(['systemctl', 'status', 'postfix'], capture_output=True, text=True)
        if 'active (running)' in result.stdout:
            print("‚úÖ Postfix —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print("‚ùå Postfix –Ω–µ –∑–∞–ø—É—â–µ–Ω")
            print(result.stdout)
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ Postfix: {e}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º .forward —Ñ–∞–π–ª
    if os.path.exists('/root/.forward'):
        with open('/root/.forward', 'r') as f:
            content = f.read().strip()
            print(f"‚úÖ .forward —Ñ–∞–π–ª —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {content}")
    else:
        print("‚ùå .forward —Ñ–∞–π–ª –Ω–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç")

def simulate_incoming_email():
    """–ò–º–∏—Ç–∏—Ä—É–µ—Ç –≤—Ö–æ–¥—è—â–µ–µ –ø–∏—Å—å–º–æ —á–µ—Ä–µ–∑ sendmail"""
    print("\nüì® –ò–º–∏—Ç–∞—Ü–∏—è –≤—Ö–æ–¥—è—â–µ–≥–æ –ø–∏—Å—å–º–∞ —á–µ—Ä–µ–∑ sendmail...")
    
    test_email = """Subject: Test backup from pve4
From: root@pve4.localdomain  
To: root@help.geltd.local

This is a test backup email.
Backup status: successful
"""
    
    try:
        # –ò—Å–ø–æ–ª—å–∑—É–µ–º sendmail –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–∏—Å—å–º–∞
        result = subprocess.run(
            ['sendmail', 'root'],
            input=test_email,
            text=True,
            capture_output=True
        )
        
        if result.returncode == 0:
            print("‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ —á–µ—Ä–µ–∑ sendmail")
            
            # –ñ–¥–µ–º –Ω–µ–º–Ω–æ–≥–æ –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
            import time
            time.sleep(2)
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏
            if os.path.exists('/opt/monitoring/logs/email_processor.log'):
                with open('/opt/monitoring/logs/email_processor.log', 'r') as f:
                    logs = f.read()
                    if 'Test backup' in logs:
                        print("‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ")
                    else:
                        print("‚ùå –¢–µ—Å—Ç–æ–≤–æ–µ –ø–∏—Å—å–º–æ –Ω–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ")
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {result.stderr}")
            
    except Exception as e:
        print(f"üí• –û—à–∏–±–∫–∞ –∏–º–∏—Ç–∞—Ü–∏–∏: {e}")

if __name__ == "__main__":
    print("üìß –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ—á—Ç–æ–≤–æ–π —Å–∏—Å—Ç–µ–º—ã –¥–ª—è root@help.geltd.local\n")
    
    check_mail_system()
    test_email_delivery() 
    simulate_incoming_email()
    
    print("\nüéØ –ò–Ω—Å—Ç—Ä—É–∫—Ü–∏—è –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ Proxmox —Å–µ—Ä–≤–µ—Ä–æ–≤:")
    print("1. –ù–∞ –∫–∞–∂–¥–æ–º Proxmox —Å–µ—Ä–≤–µ—Ä–µ –≤—ã–ø–æ–ª–Ω–∏—Ç–µ:")
    print("   nano /etc/vzdump.conf")
    print("2. –ò–∑–º–µ–Ω–∏—Ç–µ —Å—Ç—Ä–æ–∫—É mailto –Ω–∞:")
    print("   mailto: root@help.geltd.local")
    print("3. –ò–ª–∏ —á–µ—Ä–µ–∑ –≤–µ–±-–∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å:")
    print("   Storage ‚Üí Backup ‚Üí Mail to: root@help.geltd.local")