#!/usr/bin/env python3
"""
–£—Ç–∏–ª–∏—Ç–∞ –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–∏—Å–µ–º —Å –±—ç–∫–∞–ø–∞–º–∏
"""

import sqlite3
import os
import sys
from datetime import datetime

def check_email_processing():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–∏—Å–µ–º –∏ –ø–æ–∫–∞–∑—ã–≤–∞–µ—Ç —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É"""
    
    db_path = '/opt/monitoring/data/backups.db'
    
    if not os.path.exists(db_path):
        print("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return
    
    conn = sqlite3.connect(db_path)
    cursor = conn.cursor()
    
    # –û–±—â–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    cursor.execute('SELECT COUNT(*) FROM proxmox_backups')
    total_count = cursor.fetchone()[0]
    
    cursor.execute('SELECT COUNT(*) FROM proxmox_backups WHERE date(received_at) = date("now")')
    today_count = cursor.fetchone()[0]
    
    cursor.execute('SELECT COUNT(*) FROM proxmox_backups WHERE backup_status = "failed"')
    failed_count = cursor.fetchone()[0]
    
    # –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏
    cursor.execute('''
        SELECT host_name, backup_status, received_at, email_subject 
        FROM proxmox_backups 
        ORDER BY received_at DESC 
        LIMIT 5
    ''')
    recent_entries = cursor.fetchall()
    
    print("üìß –°—Ç–∞—Ç—É—Å –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–∏—Å–µ–º —Å –±—ç–∫–∞–ø–∞–º–∏")
    print("=" * 50)
    print(f"üìä –í—Å–µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ –ø–∏—Å–µ–º: {total_count}")
    print(f"üìÖ –ó–∞ —Å–µ–≥–æ–¥–Ω—è: {today_count}")
    print(f"‚ùå –ù–µ—É–¥–∞—á–Ω—ã—Ö –±—ç–∫–∞–ø–æ–≤: {failed_count}")
    print()
    print("‚è∞ –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –∑–∞–ø–∏—Å–µ–π:")
    print("-" * 50)
    
    for host, status, received, subject in recent_entries:
        time_str = datetime.strptime(received, '%Y-%m-%d %H:%M:%S').strftime('%m-%d %H:%M')
        icon = "‚úÖ" if status == 'success' else "‚ùå"
        print(f"{icon} {time_str} - {host}: {status}")
        print(f"   –¢–µ–º–∞: {subject[:60]}{'...' if len(subject) > 60 else ''}")
        print()
    
    conn.close()

def check_raw_email_logs():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –ª–æ–≥–∏ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–∏—Å–µ–º"""
    log_path = '/opt/monitoring/logs/email_processor.log'
    
    if not os.path.exists(log_path):
        print(f"‚ùå –§–∞–π–ª –ª–æ–≥–æ–≤ –Ω–µ –Ω–∞–π–¥–µ–Ω: {log_path}")
        return
    
    print("\nüìã –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏ –∏–∑ –ª–æ–≥–æ–≤:")
    print("=" * 50)
    
    # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫ –ª–æ–≥–æ–≤
    os.system(f'tail -10 {log_path}')

if __name__ == "__main__":
    check_email_processing()
    check_raw_email_logs()
    