#!/usr/bin/env python3
"""
–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–∏—Å–µ–º
"""

import sqlite3
import os

def init_databases():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –≤—Å–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö"""
    
    # –ë–∞–∑–∞ –±—ç–∫–∞–ø–æ–≤
    conn = sqlite3.connect('/opt/monitoring/data/backups.db')
    cursor = conn.cursor()
    
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS proxmox_backups (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            host_name TEXT NOT NULL,
            vm_id TEXT,
            vm_name TEXT,
            status TEXT NOT NULL,
            size TEXT,
            duration TEXT,
            backup_date TEXT,
            received_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS exiland_backups (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            job_name TEXT NOT NULL,
            status TEXT NOT NULL,
            files_count INTEGER,
            total_size TEXT,
            backup_date TEXT,
            received_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    
    conn.commit()
    conn.close()
    
    # –ë–∞–∑–∞ ZFS —Å—Ç–∞—Ç—É—Å–æ–≤
    conn = sqlite3.connect('/opt/monitoring/data/zfs_status.db')
    cursor = conn.cursor()
    
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS zfs_pools (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            pool_name TEXT NOT NULL,
            status TEXT NOT NULL,
            health TEXT,
            size TEXT,
            used TEXT,
            available TEXT,
            scrub_date TEXT,
            reported_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    
    conn.commit()
    conn.close()
    
    # –ë–∞–∑–∞ –æ—Å—Ç–∞—Ç–∫–æ–≤ —Ç–æ–≤–∞—Ä–æ–≤
    conn = sqlite3.connect('/opt/monitoring/data/inventory.db')
    cursor = conn.cursor()
    
    cursor.execute('''
        CREATE TABLE IF NOT EXISTS inventory_items (
            id INTEGER PRIMARY KEY AUTOINCREMENT,
            product_id TEXT NOT NULL,
            product_name TEXT NOT NULL,
            quantity INTEGER,
            warehouse TEXT,
            report_date TEXT,
            received_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP
        )
    ''')
    
    conn.commit()
    conn.close()
    
    print("‚úÖ –í—Å–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω—ã")

def create_directories():
    """–°–æ–∑–¥–∞–µ—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏"""
    directories = [
        '/opt/monitoring/data/email_attachments',
        '/opt/monitoring/data/inventory_files',
        '/opt/monitoring/logs'
    ]
    
    for directory in directories:
        os.makedirs(directory, exist_ok=True)
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—è: {directory}")

if __name__ == "__main__":
    create_directories()
    init_databases()
    print("üéØ –°–∏—Å—Ç–µ–º–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–∏—Å–µ–º –≥–æ—Ç–æ–≤–∞ –∫ —Ä–∞–±–æ—Ç–µ!")
    