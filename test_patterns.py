#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –ø–∞—Ç—Ç–µ—Ä–Ω–æ–≤ –¥–ª—è –±—ç–∫–∞–ø–æ–≤ –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö
"""

import re
from config import DATABASE_BACKUP_PATTERNS

def test_patterns():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –ø–∞—Ç—Ç–µ—Ä–Ω—ã –Ω–∞ –ø—Ä–∏–º–µ—Ä–∞—Ö"""
    
    test_subjects = [
        "sr-bup unf dump complete",
        "cobian BRN backup 1c_smb, errors:0", 
        "kc-1c zup dump complete",
        "yandex RUBIKON backup –†–µ–∑.–∫–æ–ø–∏—è —Å–æ–∑–¥–∞–Ω–∞ Backup",
        "vzdump backup status (sr-pve4): backup successful"  # Proxmox –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è
    ]
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–∞—Ç—Ç–µ—Ä–Ω—ã –±—ç–∫–∞–ø–æ–≤ –ë–î:")
    print("=" * 60)
    
    for subject in test_subjects:
        print(f"\nüì® –¢–µ–º–∞: {subject}")
        found = False
        
        for category, patterns in DATABASE_BACKUP_PATTERNS.items():
            for pattern in patterns:
                match = re.search(pattern, subject, re.IGNORECASE)
                if match:
                    print(f"   ‚úÖ –†–∞—Å–ø–æ–∑–Ω–∞–Ω –∫–∞–∫: {category}")
                    print(f"   üìç –ü–∞—Ç—Ç–µ—Ä–Ω: {pattern}")
                    print(f"   üîç –°–æ–≤–ø–∞–¥–µ–Ω–∏–µ: {match.groups()}")
                    found = True
                    break
            if found:
                break
        
        if not found:
            print("   ‚ùå –ù–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–Ω –∫–∞–∫ –±—ç–∫–∞–ø –ë–î")

if __name__ == "__main__":
    test_patterns()