#!/usr/bin/env python3
"""
–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å—Ç–∞—Ç—É—Å–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è backup_monitor
"""

import sys
sys.path.insert(0, '/opt/monitoring')

def check_extension_status():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è backup_monitor"""
    
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è backup_monitor...")
    
    try:
        from extensions.extension_manager import extension_manager
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Å—Ç–∞—Ç—É—Å –≤—Å–µ—Ö —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π
        extensions_status = extension_manager.get_extensions_status()
        
        print("üìä –°—Ç–∞—Ç—É—Å –≤—Å–µ—Ö —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–π:")
        for ext_id, status in extensions_status.items():
            enabled = status['enabled']
            info = status['info']
            print(f"   {ext_id}: {'üü¢ –í–ö–õ–Æ–ß–ï–ù–û' if enabled else 'üî¥ –û–¢–ö–õ–Æ–ß–ï–ù–û'} - {info['name']}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ backup_monitor
        backup_enabled = extension_manager.is_extension_enabled('backup_monitor')
        print(f"\nüîç –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ 'backup_monitor': {'üü¢ –í–ö–õ–Æ–ß–ï–ù–û' if backup_enabled else 'üî¥ –û–¢–ö–õ–Æ–ß–ï–ù–û'}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –∫–æ–º–∞–Ω–¥
        commands_available = extension_manager.is_command_available('backup')
        print(f"üîç –ö–æ–º–∞–Ω–¥–∞ 'backup' –¥–æ—Å—Ç—É–ø–Ω–∞: {'‚úÖ –î–ê' if commands_available else '‚ùå –ù–ï–¢'}")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤
        handlers_available = extension_manager.is_handler_available('backup_')
        print(f"üîç –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ 'backup_' –¥–æ—Å—Ç—É–ø–Ω—ã: {'‚úÖ –î–ê' if handlers_available else '‚ùå –ù–ï–¢'}")
        
        return backup_enabled
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏: {e}")
        import traceback
        traceback.print_exc()
        return False

def enable_backup_extension():
    """–í–∫–ª—é—á–∞–µ—Ç —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ backup_monitor"""
    
    print("\nüîß –í–∫–ª—é—á–∞–µ–º —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ backup_monitor...")
    
    try:
        from extensions.extension_manager import extension_manager
        
        success, message = extension_manager.enable_extension('backup_monitor')
        print(f"–†–µ–∑—É–ª—å—Ç–∞—Ç: {message}")
        
        if success:
            print("‚úÖ –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –≤–∫–ª—é—á–µ–Ω–æ, –ø–µ—Ä–µ–∑–∞–ø—É—Å—Ç–∏—Ç–µ –±–æ—Ç–∞")
        else:
            print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –≤–∫–ª—é—á–∏—Ç—å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ")
            
        return success
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –≤–∫–ª—é—á–µ–Ω–∏—è: {e}")
        return False

if __name__ == "__main__":
    is_enabled = check_extension_status()
    
    if not is_enabled:
        enable_backup_extension()
    else:
        print("\n‚úÖ –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ backup_monitor —É–∂–µ –≤–∫–ª—é—á–µ–Ω–æ")
        