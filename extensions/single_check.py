"""
Server Monitoring System v1.3.0
Copyright (c) 2024 Aleksandr Sukhanov
License: MIT
"""
def diagnose_ssh_command(update, context):
    """–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–º—É —Å–µ—Ä–≤–µ—Ä—É"""
    if not context.args:
        update.message.reply_text("‚ùå –£–∫–∞–∂–∏—Ç–µ IP –∏–ª–∏ –∏–º—è —Å–µ—Ä–≤–µ—Ä–∞: /diagnose_ssh <ip>")
        return

    target = context.args[0]
    
    from extensions.server_list import initialize_servers
    servers = initialize_servers()
    server = None

    # –ò—â–µ–º —Å–µ—Ä–≤–µ—Ä –ø–æ IP –∏–ª–∏ –∏–º–µ–Ω–∏
    for s in servers:
        if s["ip"] == target or s["name"] == target:
            server = s
            break

    if not server:
        update.message.reply_text(f"‚ùå –°–µ—Ä–≤–µ—Ä {target} –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ —Å–ø–∏—Å–∫–µ –º–æ–Ω–∏—Ç–æ—Ä–∏–Ω–≥–∞")
        return

    message = f"üîß *–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –¥–ª—è {server['name']} ({server['ip']})*:\n\n"

    try:
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç–∏ –ø–æ—Ä—Ç–∞
        port = 22
        from monitor_core import check_port
        is_port_open = check_port(server["ip"], port, timeout=10)
        message += f"–ü–æ—Ä—Ç {port} (SSH): {'üü¢ –û—Ç–∫—Ä—ã—Ç' if is_port_open else 'üî¥ –ó–∞–∫—Ä—ã—Ç'}\n"

        if is_port_open:
            # –ü—Ä–æ–≤–µ—Ä–∫–∞ SSH –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è
            from monitor_core import check_ssh, check_ssh_alternative
            
            message += "\n*–ü—Ä–æ–≤–µ—Ä–∫–∞ Paramiko (–æ—Å–Ω–æ–≤–Ω–æ–π –º–µ—Ç–æ–¥):*\n"
            result1 = check_ssh(server["ip"])
            message += f"- –†–µ–∑—É–ª—å—Ç–∞—Ç: {'üü¢ –£—Å–ø–µ—à–Ω–æ' if result1 else 'üî¥ –û—à–∏–±–∫–∞'}\n"
            
            message += "\n*–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º–Ω—ã–º SSH (–∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –º–µ—Ç–æ–¥):*\n"
            result2 = check_ssh_alternative(server["ip"])
            message += f"- –†–µ–∑—É–ª—å—Ç–∞—Ç: {'üü¢ –£—Å–ø–µ—à–Ω–æ' if result2 else 'üî¥ –û—à–∏–±–∫–∞'}\n"
            
            if not result1 and not result2:
                message += "\nüí° *–†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏:*\n"
                message += "- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å SSH –∫–ª—é—á–∞\n"
                message += "- –£–±–µ–¥–∏—Ç–µ—Å—å, —á—Ç–æ –∫–ª—é—á –¥–æ–±–∞–≤–ª–µ–Ω –≤ authorized_keys –Ω–∞ —Å–µ—Ä–≤–µ—Ä–µ\n"
                message += "- –ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ SSH –¥–µ–º–æ–Ω–∞ –Ω–∞ —Ü–µ–ª–µ–≤–æ–º —Å–µ—Ä–≤–µ—Ä–µ\n"
            elif result2 and not result1:
                message += "\n‚ö†Ô∏è *–ü—Ä–æ–±–ª–µ–º–∞ —Å Paramiko, –Ω–æ —Å–∏—Å—Ç–µ–º–Ω—ã–π SSH —Ä–∞–±–æ—Ç–∞–µ—Ç*\n"
                message += "–≠—Ç–æ –∏–∑–≤–µ—Å—Ç–Ω–∞—è –ø—Ä–æ–±–ª–µ–º–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–æ—Å—Ç–∏. –ò—Å–ø–æ–ª—å–∑—É–µ–º –æ–±—Ö–æ–¥–Ω—ã–µ –ø—É—Ç–∏.\n"
            else:
                message += "\n‚úÖ –û–±–∞ –º–µ—Ç–æ–¥–∞ —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ\n"

        else:
            message += "\n‚ùå *–ü–æ—Ä—Ç SSH –∑–∞–∫—Ä—ã—Ç* - —Å–µ—Ä–≤–µ—Ä –Ω–µ–¥–æ—Å—Ç—É–ø–µ–Ω\n"

    except Exception as e:
        message += f"\nüí• *–û—à–∏–±–∫–∞ –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∏:* {str(e)}\n"

    update.message.reply_text(message, parse_mode='Markdown')
