#!/usr/bin/env python3
"""
–î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –±—ç–∫–∞–ø–æ–≤
"""

import sqlite3
import os
from datetime import datetime, timedelta

def check_database():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å–æ–¥–µ—Ä–∂–∏–º–æ–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –±—ç–∫–∞–ø–æ–≤"""
    
    db_path = '/opt/monitoring/data/backups.db'
    
    if not os.path.exists(db_path):
        print("‚ùå –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
        return
    
    print(f"üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö: {db_path}")
    print("=" * 60)
    
    conn = sqlite3.connect(db_path)
    cursor = conn.cursor()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–∞–±–ª–∏—Ü—ã
    cursor.execute("SELECT name FROM sqlite_master WHERE type='table'")
    tables = cursor.fetchall()
    print("üìä –¢–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ:")
    for table in tables:
        print(f"   - {table[0]}")
    
    print("\n" + "=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º Proxmox –±—ç–∫–∞–ø—ã
    print("üìã Proxmox –±—ç–∫–∞–ø—ã (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –∑–∞–ø–∏—Å–µ–π):")
    cursor.execute('''
        SELECT host_name, backup_status, task_type, duration, received_at 
        FROM proxmox_backups 
        ORDER BY received_at DESC 
        LIMIT 10
    ''')
    proxmox_backups = cursor.fetchall()
    
    if not proxmox_backups:
        print("   ‚ùå –ù–µ—Ç –∑–∞–ø–∏—Å–µ–π –æ Proxmox –±—ç–∫–∞–ø–∞—Ö")
    else:
        for backup in proxmox_backups:
            host, status, task_type, duration, received_at = backup
            print(f"   üñ•Ô∏è  {host}: {status} ({task_type}) - {received_at}")
    
    print("\n" + "=" * 60)
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±—ç–∫–∞–ø—ã –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö
    print("üóÉÔ∏è –ë—ç–∫–∞–ø—ã –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö (–ø–æ—Å–ª–µ–¥–Ω–∏–µ 10 –∑–∞–ø–∏—Å–µ–π):")
    cursor.execute('''
        SELECT host_name, database_name, database_display_name, backup_status, backup_type, received_at 
        FROM database_backups 
        ORDER BY received_at DESC 
        LIMIT 10
    ''')
    db_backups = cursor.fetchall()
    
    if not db_backups:
        print("   ‚ùå –ù–µ—Ç –∑–∞–ø–∏—Å–µ–π –æ –±—ç–∫–∞–ø–∞—Ö –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö")
    else:
        for backup in db_backups:
            host, db_name, display_name, status, backup_type, received_at = backup
            print(f"   üíæ {host}: {display_name} ({db_name}) - {status} - {backup_type} - {received_at}")
    
    print("\n" + "=" * 60)
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–∏–ø–∞–º –±—ç–∫–∞–ø–æ–≤
    print("üìà –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–∏–ø–∞–º –±—ç–∫–∞–ø–æ–≤:")
    
    # Proxmox
    cursor.execute('''
        SELECT backup_status, COUNT(*) 
        FROM proxmox_backups 
        WHERE received_at >= datetime('now', '-7 days')
        GROUP BY backup_status
    ''')
    proxmox_stats = cursor.fetchall()
    print("   Proxmox (–∑–∞ 7 –¥–Ω–µ–π):")
    for status, count in proxmox_stats:
        print(f"     {status}: {count}")
    
    # –ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    cursor.execute('''
        SELECT backup_type, backup_status, COUNT(*) 
        FROM database_backups 
        WHERE received_at >= datetime('now', '-7 days')
        GROUP BY backup_type, backup_status
    ''')
    db_stats = cursor.fetchall()
    print("   –ë–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö (–∑–∞ 7 –¥–Ω–µ–π):")
    for backup_type, status, count in db_stats:
        print(f"     {backup_type} - {status}: {count}")
    
    conn.close()
    
    print("\n" + "=" * 60)
    print("‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")

def check_recent_emails():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –Ω–æ–≤—ã—Ö –ø–∏—Å–µ–º –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏"""
    print("\nüìß –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø–æ—á—Ç–æ–≤—ã–µ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏...")
    
    maildir_new = '/root/Maildir/new'
    maildir_cur = '/root/Maildir/cur'
    
    if os.path.exists(maildir_new):
        new_emails = os.listdir(maildir_new)
        print(f"   üì® –ù–æ–≤—ã–µ –ø–∏—Å—å–º–∞ (new): {len(new_emails)}")
        for email in new_emails[:5]:  # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –ø–µ—Ä–≤—ã–µ 5
            print(f"     - {email}")
    else:
        print("   ‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è new –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    
    if os.path.exists(maildir_cur):
        cur_emails = os.listdir(maildir_cur)
        print(f"   üìÅ –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –ø–∏—Å—å–º–∞ (cur): {len(cur_emails)}")
    else:
        print("   ‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è cur –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")

if __name__ == "__main__":
    check_database()
    check_recent_emails()
    