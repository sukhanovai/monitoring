#!/usr/bin/env python3
"""
–¢–µ—Å—Ç —Ä–µ–∞–ª—å–Ω—ã—Ö callback –¥–∞–Ω–Ω—ã—Ö
"""

import sys
sys.path.insert(0, '/opt/monitoring')

def test_real_callback_data():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç —Ä–µ–∞–ª—å–Ω—ã–µ callback –¥–∞–Ω–Ω—ã–µ"""
    
    print("üîç –¢–µ—Å—Ç–∏—Ä—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ callback –¥–∞–Ω–Ω—ã–µ...")
    
    try:
        from extensions.backup_monitor.bot_handler import create_main_keyboard, create_database_backups_keyboard
        
        # –ü—Ä–æ–≤–µ—Ä–∏–º –æ—Å–Ω–æ–≤–Ω—É—é –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É
        main_kb = create_main_keyboard()
        print("üìã –û—Å–Ω–æ–≤–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞:")
        for row in main_kb.inline_keyboard:
            for button in row:
                print(f"   üéØ {button.text} -> {button.callback_data}")
        
        # –ü—Ä–æ–≤–µ—Ä–∏–º –∫–ª–∞–≤–∏–∞—Ç—É—Ä—É –±—ç–∫–∞–ø–æ–≤ –ë–î
        db_kb = create_database_backups_keyboard()
        print("\nüìã –ö–ª–∞–≤–∏–∞—Ç—É—Ä–∞ –±—ç–∫–∞–ø–æ–≤ –ë–î:")
        for row in db_kb.inline_keyboard:
            for button in row:
                print(f"   üéØ {button.text} -> {button.callback_data}")
                
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        return False

if __name__ == "__main__":
    test_real_callback_data()
    