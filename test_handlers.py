#!/usr/bin/env python3
"""
–¢–µ—Å—Ç –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤ –∫–æ–º–∞–Ω–¥ –±—ç–∫–∞–ø–æ–≤
"""

import sys
sys.path.insert(0, '/opt/monitoring')

def test_handlers():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –Ω–∞–ª–∏—á–∏–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤"""
    
    print("üîç –ü—Ä–æ–≤–µ—Ä—è–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∫–æ–º–∞–Ω–¥...")
    
    try:
        from extensions.backup_monitor.bot_handler import (
            backup_command, backup_search_command, backup_help_command,
            database_backups_command, setup_backup_commands
        )
        print("‚úÖ –í—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –∏–º–ø–æ—Ä—Ç–∏—Ä—É—é—Ç—Å—è")
        
        # –ü—Ä–æ–≤–µ—Ä–∏–º —Ñ—É–Ω–∫—Ü–∏—é setup
        from telegram.ext import Dispatcher
        class MockDispatcher:
            def __init__(self):
                self.handlers = []
            def add_handler(self, handler):
                self.handlers.append(handler)
        
        mock_dp = MockDispatcher()
        setup_backup_commands(mock_dp)
        
        print(f"‚úÖ –ó–∞—Ä–µ–≥–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–æ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–æ–≤: {len(mock_dp.handlers)}")
        for handler in mock_dp.handlers:
            print(f"   - {type(handler).__name__}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
        import traceback
        traceback.print_exc()
        return False

if __name__ == "__main__":
    test_handlers()
    