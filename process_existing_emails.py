#!/usr/bin/env python3
"""
–û–±—Ä–∞–±–æ—Ç–∫–∞ –≤—Å–µ—Ö –ø–∏—Å–µ–º –∏–∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ cur
"""

import sys
sys.path.insert(0, '/opt/monitoring')

from improved_mail_monitor import BackupProcessor
import os
import shutil

def process_existing_emails():
    """–û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç –≤—Å–µ –ø–∏—Å—å–º–∞ –∏–∑ –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏ cur"""
    
    maildir_cur = '/root/Maildir/cur'
    maildir_tmp = '/root/Maildir/tmp_processing'
    
    print("üîÑ –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ –ø–∏—Å—å–º–∞ –∏–∑ cur...")
    
    if not os.path.exists(maildir_cur):
        print("‚ùå –î–∏—Ä–µ–∫—Ç–æ—Ä–∏—è cur –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
        return
    
    # –°–æ–∑–¥–∞–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
    if not os.path.exists(maildir_tmp):
        os.makedirs(maildir_tmp)
    
    emails = os.listdir(maildir_cur)
    print(f"üìß –ù–∞–π–¥–µ–Ω–æ –ø–∏—Å–µ–º –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏: {len(emails)}")
    
    # –ü–µ—Ä–µ–º–µ—â–∞–µ–º –ø–∏—Å—å–º–∞ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –æ–±—Ä–∞–±–æ—Ç–∫–∏
    for email_file in emails:
        src_path = os.path.join(maildir_cur, email_file)
        dst_path = os.path.join(maildir_tmp, email_file)
        shutil.move(src_path, dst_path)
    
    print(f"‚úÖ –ü–∏—Å—å–º–∞ –ø–µ—Ä–µ–º–µ—â–µ–Ω—ã –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é")
    
    # –°–æ–∑–¥–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
    processor = BackupProcessor()
    
    # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–∏—Å—å–º–∞ –∏–∑ –≤—Ä–µ–º–µ–Ω–Ω–æ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏
    processed_count = 0
    for email_file in os.listdir(maildir_tmp):
        file_path = os.path.join(maildir_tmp, email_file)
        
        if os.path.isfile(file_path):
            print(f"üîç –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º: {email_file}")
            
            # –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –ø–∏—Å—å–º–æ
            result = processor.parse_email_file(file_path)
            
            if result:
                print(f"‚úÖ –û–±—Ä–∞–±–æ—Ç–∞–Ω–æ: {email_file}")
                processed_count += 1
            else:
                print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å: {email_file}")
            
            # –ü–µ—Ä–µ–º–µ—â–∞–µ–º –æ–±—Ä–∞—Ç–Ω–æ –≤ cur
            final_path = os.path.join(maildir_cur, email_file)
            shutil.move(file_path, final_path)
    
    # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    if os.path.exists(maildir_tmp):
        os.rmdir(maildir_tmp)
    
    print(f"üìä –ò—Ç–æ–≥: –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ {processed_count} –ø–∏—Å–µ–º")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏
    check_database_after_processing()

def check_database_after_processing():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏"""
    import sqlite3
    
    db_path = '/opt/monitoring/data/backups.db'
    
    conn = sqlite3.connect(db_path)
    cursor = conn.cursor()
    
    print("\nüìä –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –ø–æ—Å–ª–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏:")
    
    # Proxmox –±—ç–∫–∞–ø—ã
    cursor.execute('SELECT COUNT(*) FROM proxmox_backups')
    proxmox_count = cursor.fetchone()[0]
    print(f"   Proxmox –±—ç–∫–∞–ø–æ–≤: {proxmox_count}")
    
    # –ë—ç–∫–∞–ø—ã –±–∞–∑ –¥–∞–Ω–Ω—ã—Ö
    cursor.execute('SELECT COUNT(*) FROM database_backups')
    db_count = cursor.fetchone()[0]
    print(f"   –ë—ç–∫–∞–ø–æ–≤ –ë–î: {db_count}")
    
    # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –±—ç–∫–∞–ø–æ–≤ –ë–î
    cursor.execute('''
        SELECT database_display_name, backup_status, backup_type, received_at 
        FROM database_backups 
        ORDER BY received_at DESC 
        LIMIT 5
    ''')
    recent_db = cursor.fetchall()
    
    print("   –ü–æ—Å–ª–µ–¥–Ω–∏–µ –±—ç–∫–∞–ø—ã –ë–î:")
    for db in recent_db:
        name, status, btype, received = db
        print(f"     - {name}: {status} ({btype}) - {received}")
    
    conn.close()

if __name__ == "__main__":
    process_existing_emails()
    