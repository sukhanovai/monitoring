# /opt/monitoring/check_email_status.py

#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –ø—Ä–æ–≤–µ—Ä–∫–∏ —Å—Ç–∞—Ç—É—Å–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–∏—Å–µ–º
"""

import sys
import os
import sqlite3
from datetime import datetime

sys.path.insert(0, '/opt/monitoring')

def check_all_status():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –≤—Å–µ –∞—Å–ø–µ–∫—Ç—ã —Å–∏—Å—Ç–µ–º—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–∏—Å–µ–º"""
    
    print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–∏—Å—Ç–µ–º—ã –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–∏—Å–µ–º\n")
    
    # 1. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞
    print("1. üìß –õ–æ–≥–∏ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∞ –ø–∏—Å–µ–º:")
    email_log = '/opt/monitoring/logs/email_processor.log'
    if os.path.exists(email_log):
        with open(email_log, 'r', encoding='utf-8') as f:
            lines = f.readlines()[-10:]  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 10 —Å—Ç—Ä–æ–∫
            if lines:
                for line in lines:
                    print(f"   {line.strip()}")
            else:
                print("   –õ–æ–≥ –ø—É—Å—Ç")
    else:
        print("   –§–∞–π–ª –ª–æ–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    # 2. –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –ø–∏—Å–µ–º
    print("\n2. üìù –û–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã–µ –ø–∏—Å—å–º–∞:")
    processed_log = '/opt/monitoring/logs/processed_emails.log'
    if os.path.exists(processed_log):
        with open(processed_log, 'r', encoding='utf-8') as f:
            lines = f.readlines()[-5:]  # –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –ø–∏—Å–µ–º
            if lines:
                for line in lines:
                    print(f"   {line.strip()}")
            else:
                print("   –ù–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∞–Ω–Ω—ã—Ö –ø–∏—Å–µ–º")
    else:
        print("   –§–∞–π–ª –ª–æ–≥–∞ –Ω–µ –Ω–∞–π–¥–µ–Ω")
    
    # 3. –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
    print("\n3. üóÑÔ∏è –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –±—ç–∫–∞–ø–æ–≤:")
    db_path = '/opt/monitoring/data/backups.db'
    if os.path.exists(db_path):
        try:
            conn = sqlite3.connect(db_path)
            cursor = conn.cursor()
            
            # –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø–∏—Å–µ–π
            cursor.execute("SELECT COUNT(*) FROM proxmox_backups")
            total = cursor.fetchone()[0]
            print(f"   –í—Å–µ–≥–æ –∑–∞–ø–∏—Å–µ–π: {total}")
            
            # –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏
            cursor.execute('''
                SELECT host_name, backup_status, datetime(received_at) 
                FROM proxmox_backups 
                ORDER BY received_at DESC 
                LIMIT 5
            ''')
            recent = cursor.fetchall()
            
            if recent:
                print("   –ü–æ—Å–ª–µ–¥–Ω–∏–µ –∑–∞–ø–∏—Å–∏:")
                for host, status, time in recent:
                    print(f"     ‚Ä¢ {host}: {status} ({time})")
            else:
                print("   –ù–µ—Ç –∑–∞–ø–∏—Å–µ–π –≤ –±–∞–∑–µ")
                
            conn.close()
        except Exception as e:
            print(f"   –û—à–∏–±–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö: {e}")
    else:
        print("   –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –Ω–µ –Ω–∞–π–¥–µ–Ω–∞")
    
    # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–º–∞–Ω–¥—É –±–æ—Ç–∞
    print("\n4. ü§ñ –°—Ç–∞—Ç—É—Å –∫–æ–º–∞–Ω–¥—ã /backup:")
    try:
        from extensions.backup_monitor.bot_handler import format_backup_summary, BackupMonitorBot
        bot = BackupMonitorBot()
        message = format_backup_summary(bot)
        
        # –í—ã–≤–æ–¥–∏–º —Ç–æ–ª—å–∫–æ –ø–µ—Ä–≤—ã–µ –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ç—Ä–æ–∫ –¥–ª—è –∫—Ä–∞—Ç–∫–æ—Å—Ç–∏
        lines = message.split('\n')[:15]
        for line in lines:
            print(f"   {line}")
            
        if len(message.split('\n')) > 15:
            print("   ... (–ø–æ–ª–Ω—ã–π –≤—ã–≤–æ–¥ –≤ –±–æ—Ç–µ)")
            
    except Exception as e:
        print(f"   –û—à–∏–±–∫–∞: {e}")

def check_specific_host(hostname):
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç —Å—Ç–∞—Ç—É—Å –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ —Ö–æ—Å—Ç–∞"""
    print(f"\nüîç –ü–æ–∏—Å–∫ —Ö–æ—Å—Ç–∞: {hostname}")
    
    db_path = '/opt/monitoring/data/backups.db'
    if os.path.exists(db_path):
        try:
            conn = sqlite3.connect(db_path)
            cursor = conn.cursor()
            
            cursor.execute('''
                SELECT host_name, backup_status, duration, total_size, datetime(received_at)
                FROM proxmox_backups 
                WHERE host_name LIKE ? 
                ORDER BY received_at DESC 
                LIMIT 3
            ''', (f'%{hostname}%',))
            
            results = cursor.fetchall()
            
            if results:
                print(f"‚úÖ –ù–∞–π–¥–µ–Ω—ã –∑–∞–ø–∏—Å–∏ –¥–ª—è {hostname}:")
                for host, status, duration, size, time in results:
                    print(f"   ‚Ä¢ {time}: {status}")
                    if duration:
                        print(f"     –î–ª–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å: {duration}")
                    if size:
                        print(f"     –†–∞–∑–º–µ—Ä: {size}")
            else:
                print(f"‚ùå –ó–∞–ø–∏—Å–µ–π –¥–ª—è {hostname} –Ω–µ –Ω–∞–π–¥–µ–Ω–æ")
                
            conn.close()
        except Exception as e:
            print(f"   –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    check_all_status()
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω—ã–µ —Ö–æ—Å—Ç—ã –∫–æ—Ç–æ—Ä—ã–µ –º–æ–≥–ª–∏ –ø—Ä–∏–π—Ç–∏
    check_specific_host('sr-pve4')
    check_specific_host('pve')
    check_specific_host('bup')
    
    print(f"\n‚è∞ –í—Ä–µ–º—è –ø—Ä–æ–≤–µ—Ä–∫–∏: {datetime.now().strftime('%Y-%m-%d %H:%M:%S')}")
    