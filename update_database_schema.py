#!/usr/bin/env python3
"""
–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ö–µ–º—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –±—ç–∫–∞–ø–æ–≤
"""

import sqlite3
import os

def update_database_schema():
    """–û–±–Ω–æ–≤–ª—è–µ—Ç —Å—Ö–µ–º—É –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –¥–æ –∞–∫—Ç—É–∞–ª—å–Ω–æ–π –≤–µ—Ä—Å–∏–∏"""
    
    db_path = '/opt/monitoring/data/backups.db'
    
    print("üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—Ö–µ–º—ã –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    conn = sqlite3.connect(db_path)
    cursor = conn.cursor()
    
    try:
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–µ–∫—É—â—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É —Ç–∞–±–ª–∏—Ü—ã
        cursor.execute("PRAGMA table_info(proxmox_backups)")
        columns = cursor.fetchall()
        column_names = [col[1] for col in columns]
        
        print(f"üìä –¢–µ–∫—É—â–∏–µ –∫–æ–ª–æ–Ω–∫–∏: {column_names}")
        
        # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É —Å –ø—Ä–∞–≤–∏–ª—å–Ω–æ–π —Å—Ç—Ä—É–∫—Ç—É—Ä–æ–π
        cursor.execute('''
            CREATE TABLE IF NOT EXISTS proxmox_backups_new (
                id INTEGER PRIMARY KEY AUTOINCREMENT,
                host_name TEXT NOT NULL,
                host_ip TEXT,
                backup_status TEXT NOT NULL,
                task_type TEXT,
                vm_count INTEGER DEFAULT 0,
                successful_vms INTEGER DEFAULT 0,
                failed_vms INTEGER DEFAULT 0,
                start_time TEXT,
                end_time TEXT,
                duration TEXT,
                total_size TEXT,
                error_message TEXT,
                email_subject TEXT,
                raw_subject TEXT,
                received_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                UNIQUE(host_name, received_at)
            )
        ''')
        
        # –ï—Å–ª–∏ —Å—Ç–∞—Ä–∞—è —Ç–∞–±–ª–∏—Ü–∞ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç, –ø–µ—Ä–µ–Ω–æ—Å–∏–º –¥–∞–Ω–Ω—ã–µ
        if 'proxmox_backups' in [t[0] for t in cursor.execute("SELECT name FROM sqlite_master WHERE type='table'").fetchall()]:
            print("üîÑ –ü–µ—Ä–µ–Ω–æ—Å –¥–∞–Ω–Ω—ã—Ö –∏–∑ —Å—Ç–∞—Ä–æ–π —Ç–∞–±–ª–∏—Ü—ã...")
            
            # –ü—Ä–æ–±—É–µ–º –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ, –µ—Å–ª–∏ —Å—Ç—Ä—É–∫—Ç—É—Ä–∞ —Å–æ–≤–º–µ—Å—Ç–∏–º–∞
            try:
                cursor.execute('''
                    INSERT INTO proxmox_backups_new 
                    (host_name, backup_status, duration, total_size, error_message, received_at)
                    SELECT host_name, status, duration, size, error_message, received_at 
                    FROM proxmox_backups
                ''')
                print("‚úÖ –î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –ø–µ—Ä–µ–Ω–µ—Å–µ–Ω—ã")
            except Exception as e:
                print(f"‚ö†Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–µ—Ä–µ–Ω–µ—Å—Ç–∏ –¥–∞–Ω–Ω—ã–µ: {e}")
                print("üìù –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—É—é —Ç–∞–±–ª–∏—Ü—É")
            
            # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é —Ç–∞–±–ª–∏—Ü—É
            cursor.execute('DROP TABLE IF EXISTS proxmox_backups')
        
        # –ü–µ—Ä–µ–∏–º–µ–Ω–æ–≤—ã–≤–∞–µ–º –Ω–æ–≤—É—é —Ç–∞–±–ª–∏—Ü—É
        cursor.execute('ALTER TABLE proxmox_backups_new RENAME TO proxmox_backups')
        
        # –°–æ–∑–¥–∞–µ–º –∏–Ω–¥–µ–∫—Å—ã
        cursor.execute('''
            CREATE INDEX IF NOT EXISTS idx_proxmox_backups_host_date 
            ON proxmox_backups(host_name, received_at)
        ''')
        
        cursor.execute('''
            CREATE INDEX IF NOT EXISTS idx_proxmox_backups_status 
            ON proxmox_backups(backup_status, received_at)
        ''')
        
        # –û—á–∏—â–∞–µ–º —Å—Ç–∞—Ä—ã–µ –∑–∞–ø–∏—Å–∏
        cursor.execute('''
            DELETE FROM proxmox_backups 
            WHERE received_at < datetime('now', '-90 days')
        ''')
        
        conn.commit()
        print("‚úÖ –°—Ö–µ–º–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–æ–≤—É—é —Å—Ç—Ä—É–∫—Ç—É—Ä—É
        cursor.execute("PRAGMA table_info(proxmox_backups)")
        new_columns = cursor.fetchall()
        print(f"üìä –ù–æ–≤—ã–µ –∫–æ–ª–æ–Ω–∫–∏: {[col[1] for col in new_columns]}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å—Ö–µ–º—ã: {e}")
        conn.rollback()
    finally:
        conn.close()

def init_database_from_scratch():
    """–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö —Å –Ω—É–ª—è"""
    
    print("üÜï –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö —Å –Ω—É–ª—è...")
    
    # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—É—é –±–∞–∑—É
    db_path = '/opt/monitoring/data/backups.db'
    if os.path.exists(db_path):
        os.remove(db_path)
        print("üóëÔ∏è –£–¥–∞–ª–µ–Ω–∞ —Å—Ç–∞—Ä–∞—è –±–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –∑–∞–Ω–æ–≤–æ
    from init_email_system import init_databases
    init_databases()
    
    print("‚úÖ –ë–∞–∑–∞ –¥–∞–Ω–Ω—ã—Ö –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω–∞ —Å –Ω—É–ª—è")

if __name__ == "__main__":
    print("üóÑÔ∏è  –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –±—ç–∫–∞–ø–æ–≤\n")
    
    # –°–Ω–∞—á–∞–ª–∞ –ø—Ä–æ–±—É–µ–º –æ–±–Ω–æ–≤–∏—Ç—å —Å—Ö–µ–º—É
    update_database_schema()
    
    # –ï—Å–ª–∏ –Ω–µ –ø–æ–ª—É—á–∏–ª–æ—Å—å, –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º —Å –Ω—É–ª—è
    input("\nüîÑ –ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö...")
    
    # –î–æ–±–∞–≤–ª—è–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ
    from test_email_processing import add_sample_data
    add_sample_data()