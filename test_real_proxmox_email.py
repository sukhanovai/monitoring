#!/usr/bin/env python3
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø–∏—Å—å–º–∞ –æ—Ç sr-pve4
"""

import sys
import os
import subprocess

sys.path.insert(0, '/opt/monitoring')

def test_sr_pve4_email():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –æ–±—Ä–∞–±–æ—Ç–∫—É —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø–∏—Å—å–º–∞ –æ—Ç sr-pve4"""
    
    print("üß™ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø–∏—Å—å–º–∞ –æ—Ç sr-pve4\n")
    
    # –†–µ–∞–ª—å–Ω–æ–µ –ø–∏—Å—å–º–æ –∫–æ—Ç–æ—Ä–æ–µ –≤—ã –ø–æ–ª—É—á–∏–ª–∏
    real_email = """Return-Path: <root@sr-pve4.localdomain>
Received: from mail.202020.ru (LHLO mail.202020.ru) (192.168.20.49) by
 mail.202020.ru with LMTP; Tue, 21 Oct 2025 18:35:54 +0700 (NOVT)
Received: from localhost (localhost [127.0.0.1])
	by mail.202020.ru (Postfix) with ESMTP id C7B7A655E4E
	for <katok@202020.ru>; Tue, 21 Oct 2025 18:35:53 +0700 (+07)
Received: from mail.202020.ru ([127.0.0.1])
	by localhost (mail.202020.ru [127.0.0.1]) (amavisd-new, port 10032)
	with ESMTP id NCF4DTo9-ANp for <katok@202020.ru>;
	Tue, 21 Oct 2025 18:35:53 +0700 (+07)
Received: from localhost (localhost [127.0.0.1])
	by mail.202020.ru (Postfix) with ESMTP id 9CF72655DEF
	for <katok@202020.ru>; Tue, 21 Oct 2025 18:35:53 +0700 (+07)
X-Virus-Scanned: amavisd-new at 202020.ru
Received: from mail.202020.ru ([127.0.0.1])
	by localhost (mail.202020.ru [127.0.0.1]) (amavisd-new, port 10026)
	with ESMTP id BzkhpSeJm-ic for <katok@202020.ru>;
	Tue, 21 Oct 2025 18:35:53 +0700 (+07)
Received: from sr-pve4.localdomain (pve4.geltd.local [192.168.30.104])
	by mail.202020.ru (Postfix) with ESMTP id 59ED1657FFF
	for <katok@202020.ru>; Tue, 21 Oct 2025 18:35:53 +0700 (+07)
Received: by sr-pve4.localdomain (Postfix, from userid 0)
	id 50BF81040C02; Tue, 21 Oct 2025 18:35:53 +0700 (+07)
Content-Type: multipart/alternative;
	boundary="----_=_NextPart_002_1761046553"
MIME-Version: 1.0
Subject: vzdump backup status (sr-pve4.geltd.local): backup successful
From: vzdump backup tool <root@sr-pve4.localdomain>
To: katok@202020.ru
Date: Tue, 21 Oct 2025 18:35:53 +0700
Auto-Submitted: auto-generated;
Message-Id: <20251021113553.50BF81040C02@sr-pve4.localdomain>

This is a multi-part message in MIME format.

------_=_NextPart_002_1761046553
Content-Type: text/plain; charset="us-ascii"
Content-Transfer-Encoding: 7bit

Backup completed successfully
Duration: 02:15:30
Total size: 145.8GB
VMs: 12 successful, 0 failed

------_=_NextPart_002_1761046553
Content-Type: text/html; charset="us-ascii"
Content-Transfer-Encoding: 7bit

<html>
<body>
<h1>Backup Report</h1>
<p>Backup completed successfully</p>
<p>Duration: 02:15:30</p>
<p>Total size: 145.8GB</p>
<p>VMs: 12 successful, 0 failed</p>
</body>
</html>

------_=_NextPart_002_1761046553--
"""
    
    try:
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –ø–∏—Å—å–º–æ —á–µ—Ä–µ–∑ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫
        result = subprocess.run(
            ['/opt/monitoring/email_processor.py'],
            input=real_email,
            text=True,
            capture_output=True,
            encoding='utf-8'
        )
        
        print(f"üìß –†–µ–∑—É–ª—å—Ç–∞—Ç –æ–±—Ä–∞–±–æ—Ç–∫–∏: –∫–æ–¥ {result.returncode}")
        
        if result.returncode == 0:
            print("‚úÖ –ü–∏—Å—å–º–æ —É—Å–ø–µ—à–Ω–æ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ")
            
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ª–æ–≥–∏
            if os.path.exists('/opt/monitoring/logs/email_processor.log'):
                with open('/opt/monitoring/logs/email_processor.log', 'r', encoding='utf-8') as f:
                    logs = f.read()
                    if 'sr-pve4' in logs:
                        print("‚úÖ –ü–∏—Å—å–º–æ –æ—Ç sr-pve4 –æ–±–Ω–∞—Ä—É–∂–µ–Ω–æ –≤ –ª–æ–≥–∞—Ö")
                    else:
                        print("‚ùå –ü–∏—Å—å–º–æ –æ—Ç sr-pve4 –Ω–µ –Ω–∞–π–¥–µ–Ω–æ –≤ –ª–æ–≥–∞—Ö")
                        
            # –ü—Ä–æ–≤–µ—Ä—è–µ–º –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö
            check_database()
            
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏: {result.stderr}")
            
        return result.returncode == 0
        
    except Exception as e:
        print(f"üí• –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        import traceback
        traceback.print_exc()
        return False

def check_database():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö"""
    print("\nüîç –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö...")
    
    try:
        from extensions.backup_monitor.bot_handler import BackupMonitorBot
        
        bot = BackupMonitorBot()
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–∞–∑–ª–∏—á–Ω—ã–µ –º–µ—Ç–æ–¥—ã
        today = bot.get_today_status()
        hosts = bot.get_all_hosts()
        recent = bot.get_recent_backups(24)
        
        print(f"üìä –î–∞–Ω–Ω—ã–µ –∑–∞ —Å–µ–≥–æ–¥–Ω—è: {len(today)} –∑–∞–ø–∏—Å–µ–π")
        print(f"üè† –í—Å–µ–≥–æ —Ö–æ—Å—Ç–æ–≤: {len(hosts)}")
        print(f"üìÖ –ü–æ—Å–ª–µ–¥–Ω–∏–µ –±—ç–∫–∞–ø—ã: {len(recent)} –∑–∞–ø–∏—Å–µ–π")
        
        if today:
            print("\nüìã –î–µ—Ç–∞–ª–∏ –ø–æ —Ö–æ—Å—Ç–∞–º:")
            for host, status, count, last_report in today:
                print(f"  ‚Ä¢ {host}: {status} (–æ—Ç—á–µ—Ç–æ–≤: {count})")
                
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ sr-pve4
        sr_pve4_data = [item for item in today if item[0] == 'sr-pve4']
        if sr_pve4_data:
            print(f"\nüéØ sr-pve4 –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ: {sr_pve4_data}")
        else:
            print(f"\n‚ùå sr-pve4 –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö")
                
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–æ–≤–µ—Ä–∫–∏ –±–∞–∑—ã: {e}")
        return False

def test_bot_command():
    """–¢–µ—Å—Ç–∏—Ä—É–µ—Ç –∫–æ–º–∞–Ω–¥—É –±–æ—Ç–∞"""
    print("\nü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∫–æ–º–∞–Ω–¥—ã /backup...")
    
    try:
        from extensions.backup_monitor.bot_handler import format_backup_summary, BackupMonitorBot
        
        bot = BackupMonitorBot()
        message = format_backup_summary(bot)
        
        print("üìä –†–µ–∑—É–ª—å—Ç–∞—Ç –∫–æ–º–∞–Ω–¥—ã /backup:")
        print("-" * 50)
        print(message)
        print("-" * 50)
        
        return True
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∫–æ–º–∞–Ω–¥—ã –±–æ—Ç–∞: {e}")
        return False

if __name__ == "__main__":
    print("üéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∫–∏ —Ä–µ–∞–ª—å–Ω–æ–≥–æ –ø–∏—Å—å–º–∞ –æ—Ç sr-pve4\n")
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ–±—Ä–∞–±–æ—Ç–∫—É –ø–∏—Å—å–º–∞
    email_processed = test_sr_pve4_email()
    
    # –¢–µ—Å—Ç–∏—Ä—É–µ–º –∫–æ–º–∞–Ω–¥—É –±–æ—Ç–∞
    if email_processed:
        test_bot_command()
    
    print("\nüìù –°–ª–µ–¥—É—é—â–∏–µ —à–∞–≥–∏:")
    print("1. –ù–∞—Å—Ç—Ä–æ–π—Ç–µ Proxmox —Å–µ—Ä–≤–µ—Ä—ã –Ω–∞ –æ—Ç–ø—Ä–∞–≤–∫—É –Ω–∞–ø—Ä—è–º—É—é –Ω–∞ root@help.geltd.local")
    print("2. –ò–ª–∏ –Ω–∞—Å—Ç—Ä–æ–π—Ç–µ –ø–µ—Ä–µ—Å—ã–ª–∫—É —Å katok@202020.ru –Ω–∞ root@help.geltd.local")
    print("3. –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Ä–∞–±–æ—Ç—É –∫–æ–º–∞–Ω–¥—ã /backup –≤ –±–æ—Ç–µ Telegram")